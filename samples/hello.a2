; hello.a2

; Inline 6502 assembly is supported within an asm-block.
; 1. ORG $800 directs the assembler to assume the code will run from $800.
; 2. Calls our main subroutine.
; 3. After returning from main, control is given back to DOS.
asm {
	ORG $800
	JSR main
	JMP $3D0
}

; Add type information to builtin, Apple II ROM subroutines.
use [
    ; COUT, the Character Output routine, prints out ch.
    ; Note: @ A means the argument should be passed in using the accumulator
    ; and @ $FDED is the fixed location of the routine in memory.
    COUT : sub <- [ch: char @ A] @ $FDED
    ; CROUT prints a carriage return.
    CROUT: sub @ $FD8E
]

; PTR will be used as a pointer, so it must live in Zero Page.
var PTR: word @ $06

; Println writes the NUL-terminated msg pointed at by PTR along with a CR.
; Note: text is a builtin alias to char^.
let Println = sub <- [txt: text @ PTR] {
    var i: int @ Y
    i := 0
    while txt_i <> 0 {
        COUT(txt_i)
        i  += 1
    }
    CROUT()
}

let main = sub {
    CROUT()
    Println("Hello, world!")
}
